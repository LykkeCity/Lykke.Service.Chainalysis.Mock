<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lykke.Service.ChainalysisMock.Client</name>
    </assembly>
    <members>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ChainalysisRiskAPI class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ChainalysisRiskAPI class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ChainalysisRiskAPI class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ChainalysisRiskAPI class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdAddressesDepositGetWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List deposit addresses associated with a user.
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdAddressesDepositPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.AddressImportModel,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Add a deposit address associated with a user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically created if it
            does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If the
            deposit address is already associated with the user the function
            succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If the deposit address is associated
            with a different user the function fails (see Response Messages
            below).&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='depositeAddress'>
            The deposit address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdAddressesDepositByAddressDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a deposit address associated with a user.
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='address'>
            The address to delete
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.IsAliveWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks service is alive
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdOutputsReceivedGetWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;List received outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;For each output the following is listed:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;output&lt;/code&gt;: the actual output&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;status&lt;/code&gt;: the status of the output.Can be:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;unconfirmed&lt;/code&gt;: if the transaction has not yet
            confirmed&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;confirmed&lt;/code&gt;: if the transaction has confirmed, but
            not yet settled&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;settled&lt;/code&gt;: if the transaction has at least 5
            confirmations.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Only settlet outputs take part in risk
            score calculations&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it cannot be
            deleted.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='status'>
            The status of the output. Possible values include: 'Active', 'Committed',
            'Aborted', 'InDoubt'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdOutputsReceivedPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.OutputImportModel,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Add a received output associated with a user.&lt;/p&gt;
            &lt;p&gt;Call this function to register that your service has received a
            transaction output on behalf of a user.&lt;/p&gt;
            &lt;p&gt;A transaction output can be specified in two ways:&lt;/p&gt;
            &lt;ol&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output index.&lt;/strong&gt; E.g.the
            second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has index 1 and is specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:1"&lt;/code&gt;&lt;/li&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output address.&lt;/strong&gt; E.g.the
            second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has output address
            &lt;code&gt;19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z&lt;/code&gt; and is
            specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z"&lt;/code&gt;&lt;/li&gt;
            &lt;/ol&gt;
            &lt;p&gt;The first form is preferred because the second form is ambigious
            in cases where the transaction has more than one output to the specified
            address.&lt;/p&gt;
            &lt;p&gt;The return value contains a risk &lt;code&gt;score&lt;/code&gt;,
            e.g. &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;red&lt;/code&gt;: This output was received directly from a
            suspicious sender.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;amber&lt;/code&gt;: This output was received from an
            unidentified sender.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;green&lt;/code&gt;: This output was received from an identified
            non-suspicious sender. &lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;If the transaction has one or more confirmations and if the
            counterparty is identified the return value will contain&lt;code&gt;
            name&lt;/code&gt; and&lt;code&gt; category&lt;/code&gt; of the
            counterparty.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If the transaction has not yet
            confirmed&lt;code&gt; score&lt;/code&gt; will be
            &lt;code&gt;amber&lt;/code&gt;.Therefore it is advised to call this
            function twice, once your service observes the output, and once the
            transaction has confirmed, just before crediting the amount of the output
            to the user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically created if it
            does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If the sent
            output is already associated with the user the function succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; If an output is not settled within 7
            days it is silently discarded.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='output'>
            The transaction output
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdOutputsReceivedByTxByOutputDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Delete a received outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it cannot be
            deleted.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='tx'>
            The hash of the transaction output
            </param>
            <param name='output'>
            The output index or output address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdOutputsSentGetWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;List sent outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;For each output the following is listed:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;output&lt;/code&gt;: the actual output&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;status&lt;/code&gt;: the status of the output.Can be:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;unconfirmed&lt;/code&gt;: if the transaction has not yet
            confirmed&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;confirmed&lt;/code&gt;: if the transaction has confirmed, but
            not yet settled&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;settled&lt;/code&gt;: if the transaction has at least 5
            confirmations.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Only settlet outputs take part in risk
            score calculations&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it cannot be
            deleted.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='status'>
            The status of the output. Possible values include: 'unconfirmed',
            'confirmed', 'settled', 'any'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdOutputsSentPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.OutputImportModel,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Add a sent output associated with a user.&lt;/p&gt;
            &lt;p&gt;Call this function to register that your service has sent a
            transaction output on behalf of a user.&lt;/p&gt;
            &lt;p&gt;A transaction output can be specified in two ways:&lt;/p&gt;
            &lt;ol&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output index.&lt;/strong&gt; E.g.the
            second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has index 1 and is specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:1"&lt;/code&gt;&lt;/li&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output address.&lt;/strong&gt; E.g.the
            second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has output address
            &lt;code&gt;19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z&lt;/code&gt; and is
            specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z"&lt;/code&gt;&lt;/li&gt;
            &lt;/ol&gt;
            &lt;p&gt;The first form is preferred because the second form is ambigious
            in cases where the transaction has more than one output to the specified
            address.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically created if it
            does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If the sent
            output is already associated with the user the function succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; If an output is not settled within 7
            days it is silently discarded.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='output'>
            The transaction output
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdOutputsSentByTxByOutputDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Delete a sent outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it cannot be
            deleted.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='tx'>
            The hash of the transaction output
            </param>
            <param name='output'>
            The output index or output address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserGetWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;List users with optional filters.&lt;/p&gt;
            &lt;p&gt;For each user the following is returned:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the ID of the user&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;score&lt;/code&gt;: the risk score of the user.E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;scoreUpdatedDate&lt;/code&gt;: the last time the risk score has
            been updated in POSIX format. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;lastActivity&lt;/code&gt;: the last time the user sent or
            received value in POSIX format. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Hint: to only return users with score&lt;code&gt; red&lt;/code&gt;
            set the &lt;code&gt;score&lt;/code&gt; parameter to&lt;code&gt;
            red&lt;/code&gt;&lt;/p&gt;
            &lt;p&gt;Hint: To only return users that have sent or received value over
            the last 2 weeks set the&lt;code&gt; maxIdleDays&lt;/code&gt; parameter to
            14&lt;/p&gt;
            </summary>
            <param name='token'>
            API-key
            </param>
            <param name='maxIdleDays'>
            Optionally filter the users by specifying the maximum numbers of days
            without sent or received activity.
            </param>
            <param name='score'>
            Optionally filter the users by specifying the risk score. Possible values
            include: 'red', 'amber', 'green'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserImportPostWithHttpMessagesAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.UserImportModel,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Import a user with sent and received history.&lt;/p&gt;
            &lt;p&gt;With this function you can import a whole user with sent and
            received output history and all deposit and withdrawal addresses.&lt;/p&gt;
            &lt;p&gt;The import format is as follows:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the unique ID of the user. The caller
            decides the user ID and can specify any value containing the folllowing
            characters '-' '_' 'a-z' 'A-Z' '0-9' with a maximum of 200
            characters.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;depositAddresses&lt;/code&gt;: The deposit addresses of the
            user. Specified as an array of strings where each address must be a valid
            Bitcoin addresses.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;withdrawalAddresses&lt;/code&gt;: The withdrawal addresses of
            the user. Specified as an array of strings where each address must be a
            valid Bitcoin addresses.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentOutputs&lt;/code&gt;: The transaction outputs sent by the
            user.See below for a specification on how to format an output.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedOutputs&lt;/code&gt;: The transaction outputs received
            by the user.See below for a specification on how to format an
            output.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Sent or received outputs can be specified in two ways:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;A transaction hash followed by the index of the output counting
            from zero: &lt;code&gt;tx-hash:output-index&lt;/code&gt;.Exmaple: The first
            output of of the transaction&lt;code&gt;
            d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e&lt;/code&gt;
            is specified like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:0"&lt;/code&gt;
            and the second output like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:1"&lt;/code&gt;&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;A transaction hash followed by the address of the output:
            &lt;code&gt;tx-hash:output-address&lt;/code&gt;.Exmaple: The first output
            of of the transaction&lt;code&gt;
            d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e&lt;/code&gt;
            is specified like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:1ERWgzFdPwbAYM6GWg9dUX1Q3KssatXgYz"&lt;/code&gt;
            and the second output like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:16F5EJE8mgiEDJzKqRdWUzdB54WceDRfjx"&lt;/code&gt;&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The second output format can be
            ambigious in cases where the output address appears more than once in the
            outputs of a single transaction. If this occurs the first matching output
            is selected.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: Importing a user with sent or received
            outputs with less than 5 confirmations will fail.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: Subsequent import calls with the same
            userId are incremental, meaning that you can import another (E.g. new)
            version of a user on top of what is registered for that user already.In
            other words, any existing outputs or addresses which are not in the new
            import will NOT get deleted.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If one of the deposit addresses are
            associated with a different user the function fails(see Response Messages
            below).&lt;/p&gt;
            </summary>
            <param name='userImport'>
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdGetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Get information about a user.&lt;/p&gt;
            &lt;p&gt;The follwing information is returned:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the ID of the user&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;creationDate&lt;/code&gt;: the POSIX time when the user was
            created&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;comment&lt;/code&gt;: an arbitrary string that can be set using
            another API function.Only included if set.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;score&lt;/code&gt;: the risk score of the user. E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;scoreUpdatedDate&lt;/code&gt;: the last time the risk score has
            been updated in POSIX format. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;lastActivity&lt;/code&gt;: the last time the user sent or
            received value in POSIX format. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;exposureDetails&lt;/code&gt;: detailed exposure data.Only
            included if the user has sent or received value.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;category&lt;/code&gt;: exposure category.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentIndirectExposure&lt;/code&gt;: funds sent
            indirectly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentDirectExposure&lt;/code&gt;: funds sent directly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedIndirectExposure&lt;/code&gt;: funds received
            indirectly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedDirectExposure&lt;/code&gt;: funds received
            directly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdCommentPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.CommentModel,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Set the &lt;code&gt;comment&lt;/code&gt; string on a
            user.&lt;/p&gt;
            &lt;p&gt;This is a convenience function that allows you to set an arbitrary
            string for a user.When retrieving a user the string is returned.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='comment'>
            The deposit address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdAddressesWithdrawalGetWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;List withdrawal addresses associated with a user.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;Each withdrawal address is given a risk&lt;code&gt;
            score&lt;/code&gt;. E.g. &lt;code&gt;red&lt;/code&gt;,
            &lt;code&gt;amber&lt;/code&gt;, or&lt;code&gt;
            green&lt;/code&gt;.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;If a withdrawal address belongs to a known service,
            then&lt;code&gt; name&lt;/code&gt; and&lt;code&gt; category&lt;/code&gt;
            will be included and gives the name and category of that service.
            Otherwise&lt;code&gt; name&lt;/code&gt; and&lt;code&gt;
            category&lt;/code&gt; will be omitted.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdAddressesWithdrawalPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.AddressImportModel,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Add a withdrawal address associated with a user.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;The user is automatically created if it does not exist.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;The function is idempotent: If the withdrawal address is already
            associated with the user the function succeeds.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;The function returns an analysis of the withdrawal
            address:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;A risk &lt;code&gt;score&lt;/code&gt;.E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;If a withdrawal address belongs to a known service,
            then&lt;code&gt; name&lt;/code&gt; and&lt;code&gt; category&lt;/code&gt;
            will be included and gives the name and category of that service.
            Otherwise&lt;code&gt; name&lt;/code&gt; and&lt;code&gt;
            category&lt;/code&gt; will be omitted.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Hint: This function could be called both when a user pastes in the
            withdrawal address for the first time, and also before each subsequent
            withdrawal.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='withdrawalAddress'>
            The withdrawal address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPI.UserByUserIdAddressesWithdrawalByAddressDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a withdrawal address associated with a user.
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='address'>
            The address to delete
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.HttpOperationException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions">
            <summary>
            Extension methods for ChainalysisRiskAPI.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdAddressesDepositGet(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List deposit addresses associated with a user.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdAddressesDepositGetAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List deposit addresses associated with a user.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdAddressesDepositPost(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.AddressImportModel,System.String)">
            <summary>
            &lt;p&gt;Add a deposit address associated with a user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically created if it
            does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If the
            deposit address is already associated with the user the function
            succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If the deposit address is associated
            with a different user the function fails (see Response Messages
            below).&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='depositeAddress'>
            The deposit address
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdAddressesDepositPostAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.AddressImportModel,System.String,System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Add a deposit address associated with a user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically created if it
            does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If the
            deposit address is already associated with the user the function
            succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If the deposit address is associated
            with a different user the function fails (see Response Messages
            below).&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='depositeAddress'>
            The deposit address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdAddressesDepositByAddressDelete(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.String)">
            <summary>
            Delete a deposit address associated with a user.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='address'>
            The address to delete
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdAddressesDepositByAddressDeleteAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a deposit address associated with a user.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='address'>
            The address to delete
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.IsAlive(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI)">
            <summary>
            Checks service is alive
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.IsAliveAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.Threading.CancellationToken)">
            <summary>
            Checks service is alive
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdOutputsReceivedGet(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            &lt;p&gt;List received outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;For each output the following is listed:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;output&lt;/code&gt;: the actual output&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;status&lt;/code&gt;: the status of the output.Can be:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;unconfirmed&lt;/code&gt;: if the transaction has not yet
            confirmed&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;confirmed&lt;/code&gt;: if the transaction has confirmed, but
            not yet settled&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;settled&lt;/code&gt;: if the transaction has at least 5
            confirmations.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Only settlet outputs take part in risk
            score calculations&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it cannot be
            deleted.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='status'>
            The status of the output. Possible values include: 'Active', 'Committed',
            'Aborted', 'InDoubt'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdOutputsReceivedGetAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;List received outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;For each output the following is listed:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;output&lt;/code&gt;: the actual output&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;status&lt;/code&gt;: the status of the output.Can be:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;unconfirmed&lt;/code&gt;: if the transaction has not yet
            confirmed&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;confirmed&lt;/code&gt;: if the transaction has confirmed, but
            not yet settled&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;settled&lt;/code&gt;: if the transaction has at least 5
            confirmations.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Only settlet outputs take part in risk
            score calculations&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it cannot be
            deleted.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='status'>
            The status of the output. Possible values include: 'Active', 'Committed',
            'Aborted', 'InDoubt'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdOutputsReceivedPost(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.OutputImportModel,System.String)">
            <summary>
            &lt;p&gt;Add a received output associated with a user.&lt;/p&gt;
            &lt;p&gt;Call this function to register that your service has received a
            transaction output on behalf of a user.&lt;/p&gt;
            &lt;p&gt;A transaction output can be specified in two ways:&lt;/p&gt;
            &lt;ol&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output index.&lt;/strong&gt; E.g.the
            second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has index 1 and is specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:1"&lt;/code&gt;&lt;/li&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output address.&lt;/strong&gt; E.g.the
            second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has output address
            &lt;code&gt;19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z&lt;/code&gt; and is
            specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z"&lt;/code&gt;&lt;/li&gt;
            &lt;/ol&gt;
            &lt;p&gt;The first form is preferred because the second form is ambigious
            in cases where the transaction has more than one output to the specified
            address.&lt;/p&gt;
            &lt;p&gt;The return value contains a risk &lt;code&gt;score&lt;/code&gt;,
            e.g. &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;red&lt;/code&gt;: This output was received directly from a
            suspicious sender.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;amber&lt;/code&gt;: This output was received from an
            unidentified sender.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;green&lt;/code&gt;: This output was received from an identified
            non-suspicious sender. &lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;If the transaction has one or more confirmations and if the
            counterparty is identified the return value will contain&lt;code&gt;
            name&lt;/code&gt; and&lt;code&gt; category&lt;/code&gt; of the
            counterparty.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If the transaction has not yet
            confirmed&lt;code&gt; score&lt;/code&gt; will be
            &lt;code&gt;amber&lt;/code&gt;.Therefore it is advised to call this
            function twice, once your service observes the output, and once the
            transaction has confirmed, just before crediting the amount of the output
            to the user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically created if it
            does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If the sent
            output is already associated with the user the function succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; If an output is not settled within 7
            days it is silently discarded.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='output'>
            The transaction output
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdOutputsReceivedPostAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.OutputImportModel,System.String,System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Add a received output associated with a user.&lt;/p&gt;
            &lt;p&gt;Call this function to register that your service has received a
            transaction output on behalf of a user.&lt;/p&gt;
            &lt;p&gt;A transaction output can be specified in two ways:&lt;/p&gt;
            &lt;ol&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output index.&lt;/strong&gt; E.g.the
            second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has index 1 and is specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:1"&lt;/code&gt;&lt;/li&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output address.&lt;/strong&gt; E.g.the
            second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has output address
            &lt;code&gt;19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z&lt;/code&gt; and is
            specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z"&lt;/code&gt;&lt;/li&gt;
            &lt;/ol&gt;
            &lt;p&gt;The first form is preferred because the second form is ambigious
            in cases where the transaction has more than one output to the specified
            address.&lt;/p&gt;
            &lt;p&gt;The return value contains a risk &lt;code&gt;score&lt;/code&gt;,
            e.g. &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;red&lt;/code&gt;: This output was received directly from a
            suspicious sender.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;amber&lt;/code&gt;: This output was received from an
            unidentified sender.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;green&lt;/code&gt;: This output was received from an identified
            non-suspicious sender. &lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;If the transaction has one or more confirmations and if the
            counterparty is identified the return value will contain&lt;code&gt;
            name&lt;/code&gt; and&lt;code&gt; category&lt;/code&gt; of the
            counterparty.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If the transaction has not yet
            confirmed&lt;code&gt; score&lt;/code&gt; will be
            &lt;code&gt;amber&lt;/code&gt;.Therefore it is advised to call this
            function twice, once your service observes the output, and once the
            transaction has confirmed, just before crediting the amount of the output
            to the user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically created if it
            does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If the sent
            output is already associated with the user the function succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; If an output is not settled within 7
            days it is silently discarded.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='output'>
            The transaction output
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdOutputsReceivedByTxByOutputDelete(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.String,System.String)">
            <summary>
            &lt;p&gt;Delete a received outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it cannot be
            deleted.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='tx'>
            The hash of the transaction output
            </param>
            <param name='output'>
            The output index or output address
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdOutputsReceivedByTxByOutputDeleteAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Delete a received outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it cannot be
            deleted.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='tx'>
            The hash of the transaction output
            </param>
            <param name='output'>
            The output index or output address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdOutputsSentGet(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            &lt;p&gt;List sent outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;For each output the following is listed:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;output&lt;/code&gt;: the actual output&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;status&lt;/code&gt;: the status of the output.Can be:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;unconfirmed&lt;/code&gt;: if the transaction has not yet
            confirmed&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;confirmed&lt;/code&gt;: if the transaction has confirmed, but
            not yet settled&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;settled&lt;/code&gt;: if the transaction has at least 5
            confirmations.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Only settlet outputs take part in risk
            score calculations&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it cannot be
            deleted.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='status'>
            The status of the output. Possible values include: 'unconfirmed',
            'confirmed', 'settled', 'any'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdOutputsSentGetAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;List sent outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;For each output the following is listed:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;output&lt;/code&gt;: the actual output&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;status&lt;/code&gt;: the status of the output.Can be:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;unconfirmed&lt;/code&gt;: if the transaction has not yet
            confirmed&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;confirmed&lt;/code&gt;: if the transaction has confirmed, but
            not yet settled&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;settled&lt;/code&gt;: if the transaction has at least 5
            confirmations.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Only settlet outputs take part in risk
            score calculations&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it cannot be
            deleted.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='status'>
            The status of the output. Possible values include: 'unconfirmed',
            'confirmed', 'settled', 'any'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdOutputsSentPost(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.OutputImportModel,System.String)">
            <summary>
            &lt;p&gt;Add a sent output associated with a user.&lt;/p&gt;
            &lt;p&gt;Call this function to register that your service has sent a
            transaction output on behalf of a user.&lt;/p&gt;
            &lt;p&gt;A transaction output can be specified in two ways:&lt;/p&gt;
            &lt;ol&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output index.&lt;/strong&gt; E.g.the
            second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has index 1 and is specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:1"&lt;/code&gt;&lt;/li&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output address.&lt;/strong&gt; E.g.the
            second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has output address
            &lt;code&gt;19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z&lt;/code&gt; and is
            specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z"&lt;/code&gt;&lt;/li&gt;
            &lt;/ol&gt;
            &lt;p&gt;The first form is preferred because the second form is ambigious
            in cases where the transaction has more than one output to the specified
            address.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically created if it
            does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If the sent
            output is already associated with the user the function succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; If an output is not settled within 7
            days it is silently discarded.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='output'>
            The transaction output
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdOutputsSentPostAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.OutputImportModel,System.String,System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Add a sent output associated with a user.&lt;/p&gt;
            &lt;p&gt;Call this function to register that your service has sent a
            transaction output on behalf of a user.&lt;/p&gt;
            &lt;p&gt;A transaction output can be specified in two ways:&lt;/p&gt;
            &lt;ol&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output index.&lt;/strong&gt; E.g.the
            second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has index 1 and is specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:1"&lt;/code&gt;&lt;/li&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output address.&lt;/strong&gt; E.g.the
            second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has output address
            &lt;code&gt;19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z&lt;/code&gt; and is
            specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z"&lt;/code&gt;&lt;/li&gt;
            &lt;/ol&gt;
            &lt;p&gt;The first form is preferred because the second form is ambigious
            in cases where the transaction has more than one output to the specified
            address.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically created if it
            does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If the sent
            output is already associated with the user the function succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; If an output is not settled within 7
            days it is silently discarded.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='output'>
            The transaction output
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdOutputsSentByTxByOutputDelete(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.String,System.String)">
            <summary>
            &lt;p&gt;Delete a sent outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it cannot be
            deleted.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='tx'>
            The hash of the transaction output
            </param>
            <param name='output'>
            The output index or output address
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdOutputsSentByTxByOutputDeleteAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Delete a sent outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it cannot be
            deleted.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='tx'>
            The hash of the transaction output
            </param>
            <param name='output'>
            The output index or output address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserGet(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            &lt;p&gt;List users with optional filters.&lt;/p&gt;
            &lt;p&gt;For each user the following is returned:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the ID of the user&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;score&lt;/code&gt;: the risk score of the user.E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;scoreUpdatedDate&lt;/code&gt;: the last time the risk score has
            been updated in POSIX format. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;lastActivity&lt;/code&gt;: the last time the user sent or
            received value in POSIX format. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Hint: to only return users with score&lt;code&gt; red&lt;/code&gt;
            set the &lt;code&gt;score&lt;/code&gt; parameter to&lt;code&gt;
            red&lt;/code&gt;&lt;/p&gt;
            &lt;p&gt;Hint: To only return users that have sent or received value over
            the last 2 weeks set the&lt;code&gt; maxIdleDays&lt;/code&gt; parameter to
            14&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='maxIdleDays'>
            Optionally filter the users by specifying the maximum numbers of days
            without sent or received activity.
            </param>
            <param name='score'>
            Optionally filter the users by specifying the risk score. Possible values
            include: 'red', 'amber', 'green'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserGetAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;List users with optional filters.&lt;/p&gt;
            &lt;p&gt;For each user the following is returned:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the ID of the user&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;score&lt;/code&gt;: the risk score of the user.E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;scoreUpdatedDate&lt;/code&gt;: the last time the risk score has
            been updated in POSIX format. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;lastActivity&lt;/code&gt;: the last time the user sent or
            received value in POSIX format. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Hint: to only return users with score&lt;code&gt; red&lt;/code&gt;
            set the &lt;code&gt;score&lt;/code&gt; parameter to&lt;code&gt;
            red&lt;/code&gt;&lt;/p&gt;
            &lt;p&gt;Hint: To only return users that have sent or received value over
            the last 2 weeks set the&lt;code&gt; maxIdleDays&lt;/code&gt; parameter to
            14&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='maxIdleDays'>
            Optionally filter the users by specifying the maximum numbers of days
            without sent or received activity.
            </param>
            <param name='score'>
            Optionally filter the users by specifying the risk score. Possible values
            include: 'red', 'amber', 'green'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserImportPost(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.UserImportModel,System.String)">
            <summary>
            &lt;p&gt;Import a user with sent and received history.&lt;/p&gt;
            &lt;p&gt;With this function you can import a whole user with sent and
            received output history and all deposit and withdrawal addresses.&lt;/p&gt;
            &lt;p&gt;The import format is as follows:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the unique ID of the user. The caller
            decides the user ID and can specify any value containing the folllowing
            characters '-' '_' 'a-z' 'A-Z' '0-9' with a maximum of 200
            characters.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;depositAddresses&lt;/code&gt;: The deposit addresses of the
            user. Specified as an array of strings where each address must be a valid
            Bitcoin addresses.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;withdrawalAddresses&lt;/code&gt;: The withdrawal addresses of
            the user. Specified as an array of strings where each address must be a
            valid Bitcoin addresses.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentOutputs&lt;/code&gt;: The transaction outputs sent by the
            user.See below for a specification on how to format an output.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedOutputs&lt;/code&gt;: The transaction outputs received
            by the user.See below for a specification on how to format an
            output.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Sent or received outputs can be specified in two ways:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;A transaction hash followed by the index of the output counting
            from zero: &lt;code&gt;tx-hash:output-index&lt;/code&gt;.Exmaple: The first
            output of of the transaction&lt;code&gt;
            d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e&lt;/code&gt;
            is specified like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:0"&lt;/code&gt;
            and the second output like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:1"&lt;/code&gt;&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;A transaction hash followed by the address of the output:
            &lt;code&gt;tx-hash:output-address&lt;/code&gt;.Exmaple: The first output
            of of the transaction&lt;code&gt;
            d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e&lt;/code&gt;
            is specified like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:1ERWgzFdPwbAYM6GWg9dUX1Q3KssatXgYz"&lt;/code&gt;
            and the second output like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:16F5EJE8mgiEDJzKqRdWUzdB54WceDRfjx"&lt;/code&gt;&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The second output format can be
            ambigious in cases where the output address appears more than once in the
            outputs of a single transaction. If this occurs the first matching output
            is selected.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: Importing a user with sent or received
            outputs with less than 5 confirmations will fail.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: Subsequent import calls with the same
            userId are incremental, meaning that you can import another (E.g. new)
            version of a user on top of what is registered for that user already.In
            other words, any existing outputs or addresses which are not in the new
            import will NOT get deleted.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If one of the deposit addresses are
            associated with a different user the function fails(see Response Messages
            below).&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userImport'>
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserImportPostAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.UserImportModel,System.String,System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Import a user with sent and received history.&lt;/p&gt;
            &lt;p&gt;With this function you can import a whole user with sent and
            received output history and all deposit and withdrawal addresses.&lt;/p&gt;
            &lt;p&gt;The import format is as follows:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the unique ID of the user. The caller
            decides the user ID and can specify any value containing the folllowing
            characters '-' '_' 'a-z' 'A-Z' '0-9' with a maximum of 200
            characters.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;depositAddresses&lt;/code&gt;: The deposit addresses of the
            user. Specified as an array of strings where each address must be a valid
            Bitcoin addresses.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;withdrawalAddresses&lt;/code&gt;: The withdrawal addresses of
            the user. Specified as an array of strings where each address must be a
            valid Bitcoin addresses.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentOutputs&lt;/code&gt;: The transaction outputs sent by the
            user.See below for a specification on how to format an output.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedOutputs&lt;/code&gt;: The transaction outputs received
            by the user.See below for a specification on how to format an
            output.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Sent or received outputs can be specified in two ways:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;A transaction hash followed by the index of the output counting
            from zero: &lt;code&gt;tx-hash:output-index&lt;/code&gt;.Exmaple: The first
            output of of the transaction&lt;code&gt;
            d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e&lt;/code&gt;
            is specified like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:0"&lt;/code&gt;
            and the second output like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:1"&lt;/code&gt;&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;A transaction hash followed by the address of the output:
            &lt;code&gt;tx-hash:output-address&lt;/code&gt;.Exmaple: The first output
            of of the transaction&lt;code&gt;
            d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e&lt;/code&gt;
            is specified like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:1ERWgzFdPwbAYM6GWg9dUX1Q3KssatXgYz"&lt;/code&gt;
            and the second output like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:16F5EJE8mgiEDJzKqRdWUzdB54WceDRfjx"&lt;/code&gt;&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The second output format can be
            ambigious in cases where the output address appears more than once in the
            outputs of a single transaction. If this occurs the first matching output
            is selected.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: Importing a user with sent or received
            outputs with less than 5 confirmations will fail.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: Subsequent import calls with the same
            userId are incremental, meaning that you can import another (E.g. new)
            version of a user on top of what is registered for that user already.In
            other words, any existing outputs or addresses which are not in the new
            import will NOT get deleted.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If one of the deposit addresses are
            associated with a different user the function fails(see Response Messages
            below).&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userImport'>
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdGet(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String)">
            <summary>
            &lt;p&gt;Get information about a user.&lt;/p&gt;
            &lt;p&gt;The follwing information is returned:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the ID of the user&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;creationDate&lt;/code&gt;: the POSIX time when the user was
            created&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;comment&lt;/code&gt;: an arbitrary string that can be set using
            another API function.Only included if set.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;score&lt;/code&gt;: the risk score of the user. E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;scoreUpdatedDate&lt;/code&gt;: the last time the risk score has
            been updated in POSIX format. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;lastActivity&lt;/code&gt;: the last time the user sent or
            received value in POSIX format. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;exposureDetails&lt;/code&gt;: detailed exposure data.Only
            included if the user has sent or received value.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;category&lt;/code&gt;: exposure category.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentIndirectExposure&lt;/code&gt;: funds sent
            indirectly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentDirectExposure&lt;/code&gt;: funds sent directly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedIndirectExposure&lt;/code&gt;: funds received
            indirectly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedDirectExposure&lt;/code&gt;: funds received
            directly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdGetAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Get information about a user.&lt;/p&gt;
            &lt;p&gt;The follwing information is returned:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the ID of the user&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;creationDate&lt;/code&gt;: the POSIX time when the user was
            created&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;comment&lt;/code&gt;: an arbitrary string that can be set using
            another API function.Only included if set.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;score&lt;/code&gt;: the risk score of the user. E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;scoreUpdatedDate&lt;/code&gt;: the last time the risk score has
            been updated in POSIX format. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;lastActivity&lt;/code&gt;: the last time the user sent or
            received value in POSIX format. Only included if the user has sent or
            received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;exposureDetails&lt;/code&gt;: detailed exposure data.Only
            included if the user has sent or received value.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;category&lt;/code&gt;: exposure category.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentIndirectExposure&lt;/code&gt;: funds sent
            indirectly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentDirectExposure&lt;/code&gt;: funds sent directly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedIndirectExposure&lt;/code&gt;: funds received
            indirectly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedDirectExposure&lt;/code&gt;: funds received
            directly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdCommentPost(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.CommentModel,System.String)">
            <summary>
            &lt;p&gt;Set the &lt;code&gt;comment&lt;/code&gt; string on a
            user.&lt;/p&gt;
            &lt;p&gt;This is a convenience function that allows you to set an arbitrary
            string for a user.When retrieving a user the string is returned.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='comment'>
            The deposit address
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdCommentPostAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.CommentModel,System.String,System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Set the &lt;code&gt;comment&lt;/code&gt; string on a
            user.&lt;/p&gt;
            &lt;p&gt;This is a convenience function that allows you to set an arbitrary
            string for a user.When retrieving a user the string is returned.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='comment'>
            The deposit address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdAddressesWithdrawalGet(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            &lt;p&gt;List withdrawal addresses associated with a user.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;Each withdrawal address is given a risk&lt;code&gt;
            score&lt;/code&gt;. E.g. &lt;code&gt;red&lt;/code&gt;,
            &lt;code&gt;amber&lt;/code&gt;, or&lt;code&gt;
            green&lt;/code&gt;.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;If a withdrawal address belongs to a known service,
            then&lt;code&gt; name&lt;/code&gt; and&lt;code&gt; category&lt;/code&gt;
            will be included and gives the name and category of that service.
            Otherwise&lt;code&gt; name&lt;/code&gt; and&lt;code&gt;
            category&lt;/code&gt; will be omitted.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdAddressesWithdrawalGetAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;List withdrawal addresses associated with a user.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;Each withdrawal address is given a risk&lt;code&gt;
            score&lt;/code&gt;. E.g. &lt;code&gt;red&lt;/code&gt;,
            &lt;code&gt;amber&lt;/code&gt;, or&lt;code&gt;
            green&lt;/code&gt;.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;If a withdrawal address belongs to a known service,
            then&lt;code&gt; name&lt;/code&gt; and&lt;code&gt; category&lt;/code&gt;
            will be included and gives the name and category of that service.
            Otherwise&lt;code&gt; name&lt;/code&gt; and&lt;code&gt;
            category&lt;/code&gt; will be omitted.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdAddressesWithdrawalPost(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.AddressImportModel,System.String)">
            <summary>
            &lt;p&gt;Add a withdrawal address associated with a user.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;The user is automatically created if it does not exist.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;The function is idempotent: If the withdrawal address is already
            associated with the user the function succeeds.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;The function returns an analysis of the withdrawal
            address:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;A risk &lt;code&gt;score&lt;/code&gt;.E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;If a withdrawal address belongs to a known service,
            then&lt;code&gt; name&lt;/code&gt; and&lt;code&gt; category&lt;/code&gt;
            will be included and gives the name and category of that service.
            Otherwise&lt;code&gt; name&lt;/code&gt; and&lt;code&gt;
            category&lt;/code&gt; will be omitted.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Hint: This function could be called both when a user pastes in the
            withdrawal address for the first time, and also before each subsequent
            withdrawal.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='withdrawalAddress'>
            The withdrawal address
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdAddressesWithdrawalPostAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.AddressImportModel,System.String,System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Add a withdrawal address associated with a user.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;The user is automatically created if it does not exist.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;The function is idempotent: If the withdrawal address is already
            associated with the user the function succeeds.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;The function returns an analysis of the withdrawal
            address:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;A risk &lt;code&gt;score&lt;/code&gt;.E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;If a withdrawal address belongs to a known service,
            then&lt;code&gt; name&lt;/code&gt; and&lt;code&gt; category&lt;/code&gt;
            will be included and gives the name and category of that service.
            Otherwise&lt;code&gt; name&lt;/code&gt; and&lt;code&gt;
            category&lt;/code&gt; will be omitted.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Hint: This function could be called both when a user pastes in the
            withdrawal address for the first time, and also before each subsequent
            withdrawal.&lt;/p&gt;
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='withdrawalAddress'>
            The withdrawal address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdAddressesWithdrawalByAddressDelete(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.String)">
            <summary>
            Delete a withdrawal address associated with a user.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='address'>
            The address to delete
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.ChainalysisRiskAPIExtensions.UserByUserIdAddressesWithdrawalByAddressDeleteAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a withdrawal address associated with a user.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='address'>
            The address to delete
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdAddressesDepositGetWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List deposit addresses associated with a user.
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdAddressesDepositPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.AddressImportModel,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Add a deposit address associated with a user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically
            created if it does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If
            the deposit address is already associated with the user the
            function succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If the deposit address is
            associated with a different user the function fails (see Response
            Messages below).&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='depositeAddress'>
            The deposit address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdAddressesDepositByAddressDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a deposit address associated with a user.
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='address'>
            The address to delete
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.IsAliveWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks service is alive
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdOutputsReceivedGetWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;List received outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;For each output the following is listed:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;output&lt;/code&gt;: the actual output&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;status&lt;/code&gt;: the status of the output.Can
            be:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;unconfirmed&lt;/code&gt;: if the transaction has not
            yet confirmed&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;confirmed&lt;/code&gt;: if the transaction has
            confirmed, but not yet settled&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;settled&lt;/code&gt;: if the transaction has at least 5
            confirmations.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Only settlet outputs take part
            in risk score calculations&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it
            cannot be deleted.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='status'>
            The status of the output. Possible values include: 'Active',
            'Committed', 'Aborted', 'InDoubt'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdOutputsReceivedPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.OutputImportModel,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Add a received output associated with a user.&lt;/p&gt;
            &lt;p&gt;Call this function to register that your service has
            received a transaction output on behalf of a user.&lt;/p&gt;
            &lt;p&gt;A transaction output can be specified in two
            ways:&lt;/p&gt;
            &lt;ol&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output index.&lt;/strong&gt;
            E.g.the second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has index 1 and is specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:1"&lt;/code&gt;&lt;/li&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output address.&lt;/strong&gt;
            E.g.the second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has output address
            &lt;code&gt;19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z&lt;/code&gt; and is
            specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z"&lt;/code&gt;&lt;/li&gt;
            &lt;/ol&gt;
            &lt;p&gt;The first form is preferred because the second form is
            ambigious in cases where the transaction has more than one output
            to the specified address.&lt;/p&gt;
            &lt;p&gt;The return value contains a risk
            &lt;code&gt;score&lt;/code&gt;, e.g. &lt;code&gt;red&lt;/code&gt;,
            &lt;code&gt;amber&lt;/code&gt;, or&lt;code&gt;
            green&lt;/code&gt;:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;red&lt;/code&gt;: This output was received directly
            from a suspicious sender.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;amber&lt;/code&gt;: This output was received from an
            unidentified sender.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;green&lt;/code&gt;: This output was received from an
            identified non-suspicious sender. &lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;If the transaction has one or more confirmations and if
            the counterparty is identified the return value will
            contain&lt;code&gt; name&lt;/code&gt; and&lt;code&gt;
            category&lt;/code&gt; of the counterparty.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If the transaction has not yet
            confirmed&lt;code&gt; score&lt;/code&gt; will be
            &lt;code&gt;amber&lt;/code&gt;.Therefore it is advised to call this
            function twice, once your service observes the output, and once the
            transaction has confirmed, just before crediting the amount of the
            output to the user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically
            created if it does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If
            the sent output is already associated with the user the function
            succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; If an output is not settled
            within 7 days it is silently discarded.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='output'>
            The transaction output
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdOutputsReceivedByTxByOutputDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Delete a received outputs associated with a
            user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it
            cannot be deleted.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='tx'>
            The hash of the transaction output
            </param>
            <param name='output'>
            The output index or output address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdOutputsSentGetWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;List sent outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;For each output the following is listed:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;output&lt;/code&gt;: the actual output&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;status&lt;/code&gt;: the status of the output.Can
            be:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;unconfirmed&lt;/code&gt;: if the transaction has not
            yet confirmed&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;confirmed&lt;/code&gt;: if the transaction has
            confirmed, but not yet settled&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;settled&lt;/code&gt;: if the transaction has at least 5
            confirmations.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Only settlet outputs take part
            in risk score calculations&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it
            cannot be deleted.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='status'>
            The status of the output. Possible values include: 'unconfirmed',
            'confirmed', 'settled', 'any'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdOutputsSentPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.OutputImportModel,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Add a sent output associated with a user.&lt;/p&gt;
            &lt;p&gt;Call this function to register that your service has sent
            a transaction output on behalf of a user.&lt;/p&gt;
            &lt;p&gt;A transaction output can be specified in two
            ways:&lt;/p&gt;
            &lt;ol&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output index.&lt;/strong&gt;
            E.g.the second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has index 1 and is specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:1"&lt;/code&gt;&lt;/li&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output address.&lt;/strong&gt;
            E.g.the second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has output address
            &lt;code&gt;19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z&lt;/code&gt; and is
            specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z"&lt;/code&gt;&lt;/li&gt;
            &lt;/ol&gt;
            &lt;p&gt;The first form is preferred because the second form is
            ambigious in cases where the transaction has more than one output
            to the specified address.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically
            created if it does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If
            the sent output is already associated with the user the function
            succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; If an output is not settled
            within 7 days it is silently discarded.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='output'>
            The transaction output
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdOutputsSentByTxByOutputDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Delete a sent outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it
            cannot be deleted.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='tx'>
            The hash of the transaction output
            </param>
            <param name='output'>
            The output index or output address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserGetWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;List users with optional filters.&lt;/p&gt;
            &lt;p&gt;For each user the following is returned:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the ID of the user&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;score&lt;/code&gt;: the risk score of the user.E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;. Only included if the user has
            sent or received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;scoreUpdatedDate&lt;/code&gt;: the last time the risk
            score has been updated in POSIX format. Only included if the user
            has sent or received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;lastActivity&lt;/code&gt;: the last time the user sent
            or received value in POSIX format. Only included if the user has
            sent or received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Hint: to only return users with score&lt;code&gt;
            red&lt;/code&gt; set the &lt;code&gt;score&lt;/code&gt; parameter
            to&lt;code&gt; red&lt;/code&gt;&lt;/p&gt;
            &lt;p&gt;Hint: To only return users that have sent or received
            value over the last 2 weeks set the&lt;code&gt;
            maxIdleDays&lt;/code&gt; parameter to 14&lt;/p&gt;
            </summary>
            <param name='token'>
            API-key
            </param>
            <param name='maxIdleDays'>
            Optionally filter the users by specifying the maximum numbers of
            days without sent or received activity.
            </param>
            <param name='score'>
            Optionally filter the users by specifying the risk score. Possible
            values include: 'red', 'amber', 'green'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserImportPostWithHttpMessagesAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.UserImportModel,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Import a user with sent and received history.&lt;/p&gt;
            &lt;p&gt;With this function you can import a whole user with sent
            and received output history and all deposit and withdrawal
            addresses.&lt;/p&gt;
            &lt;p&gt;The import format is as follows:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the unique ID of the user. The
            caller decides the user ID and can specify any value containing the
            folllowing characters '-' '_' 'a-z' 'A-Z' '0-9' with a maximum of
            200 characters.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;depositAddresses&lt;/code&gt;: The deposit addresses of
            the user. Specified as an array of strings where each address must
            be a valid Bitcoin addresses.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;withdrawalAddresses&lt;/code&gt;: The withdrawal
            addresses of the user. Specified as an array of strings where each
            address must be a valid Bitcoin addresses.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentOutputs&lt;/code&gt;: The transaction outputs sent
            by the user.See below for a specification on how to format an
            output.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedOutputs&lt;/code&gt;: The transaction outputs
            received by the user.See below for a specification on how to format
            an output.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Sent or received outputs can be specified in two
            ways:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;A transaction hash followed by the index of the output
            counting from zero:
            &lt;code&gt;tx-hash:output-index&lt;/code&gt;.Exmaple: The first
            output of of the transaction&lt;code&gt;
            d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e&lt;/code&gt;
            is specified like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:0"&lt;/code&gt;
            and the second output like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:1"&lt;/code&gt;&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;A transaction hash followed by the address of the output:
            &lt;code&gt;tx-hash:output-address&lt;/code&gt;.Exmaple: The first
            output of of the transaction&lt;code&gt;
            d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e&lt;/code&gt;
            is specified like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:1ERWgzFdPwbAYM6GWg9dUX1Q3KssatXgYz"&lt;/code&gt;
            and the second output like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:16F5EJE8mgiEDJzKqRdWUzdB54WceDRfjx"&lt;/code&gt;&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The second output format can be
            ambigious in cases where the output address appears more than once
            in the outputs of a single transaction. If this occurs the first
            matching output is selected.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: Importing a user with sent or
            received outputs with less than 5 confirmations will
            fail.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: Subsequent import calls with the
            same userId are incremental, meaning that you can import another
            (E.g. new) version of a user on top of what is registered for that
            user already.In other words, any existing outputs or addresses
            which are not in the new import will NOT get deleted.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If one of the deposit addresses
            are associated with a different user the function fails(see
            Response Messages below).&lt;/p&gt;
            </summary>
            <param name='userImport'>
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdGetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Get information about a user.&lt;/p&gt;
            &lt;p&gt;The follwing information is returned:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the ID of the user&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;creationDate&lt;/code&gt;: the POSIX time when the user
            was created&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;comment&lt;/code&gt;: an arbitrary string that can be
            set using another API function.Only included if set.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;score&lt;/code&gt;: the risk score of the user. E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;. Only included if the user has
            sent or received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;scoreUpdatedDate&lt;/code&gt;: the last time the risk
            score has been updated in POSIX format. Only included if the user
            has sent or received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;lastActivity&lt;/code&gt;: the last time the user sent
            or received value in POSIX format. Only included if the user has
            sent or received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;exposureDetails&lt;/code&gt;: detailed exposure
            data.Only included if the user has sent or received
            value.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;category&lt;/code&gt;: exposure category.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentIndirectExposure&lt;/code&gt;: funds sent
            indirectly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentDirectExposure&lt;/code&gt;: funds sent
            directly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedIndirectExposure&lt;/code&gt;: funds received
            indirectly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedDirectExposure&lt;/code&gt;: funds received
            directly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdCommentPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.CommentModel,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Set the &lt;code&gt;comment&lt;/code&gt; string on a
            user.&lt;/p&gt;
            &lt;p&gt;This is a convenience function that allows you to set an
            arbitrary string for a user.When retrieving a user the string is
            returned.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='comment'>
            The deposit address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdAddressesWithdrawalGetWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;List withdrawal addresses associated with a
            user.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;Each withdrawal address is given a risk&lt;code&gt;
            score&lt;/code&gt;. E.g. &lt;code&gt;red&lt;/code&gt;,
            &lt;code&gt;amber&lt;/code&gt;, or&lt;code&gt;
            green&lt;/code&gt;.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;If a withdrawal address belongs to a known service,
            then&lt;code&gt; name&lt;/code&gt; and&lt;code&gt;
            category&lt;/code&gt; will be included and gives the name and
            category of that service. Otherwise&lt;code&gt; name&lt;/code&gt;
            and&lt;code&gt; category&lt;/code&gt; will be omitted.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdAddressesWithdrawalPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.AddressImportModel,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            &lt;p&gt;Add a withdrawal address associated with a user.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;The user is automatically created if it does not
            exist.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;The function is idempotent: If the withdrawal address is
            already associated with the user the function succeeds.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;The function returns an analysis of the withdrawal
            address:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;A risk &lt;code&gt;score&lt;/code&gt;.E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;If a withdrawal address belongs to a known service,
            then&lt;code&gt; name&lt;/code&gt; and&lt;code&gt;
            category&lt;/code&gt; will be included and gives the name and
            category of that service. Otherwise&lt;code&gt; name&lt;/code&gt;
            and&lt;code&gt; category&lt;/code&gt; will be omitted.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Hint: This function could be called both when a user
            pastes in the withdrawal address for the first time, and also
            before each subsequent withdrawal.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='withdrawalAddress'>
            The withdrawal address
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.IChainalysisRiskAPI.UserByUserIdAddressesWithdrawalByAddressDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a withdrawal address associated with a user.
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='address'>
            The address to delete
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.AddressImportModel.#ctor">
            <summary>
            Initializes a new instance of the AddressImportModel class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.AddressImportModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AddressImportModel class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.AddressImportModel.Address">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.CommentModel.#ctor">
            <summary>
            Initializes a new instance of the CommentModel class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.CommentModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CommentModel class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.CommentModel.Comment">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.ErrorResponse.#ctor">
            <summary>
            Initializes a new instance of the ErrorResponse class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.ErrorResponse.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}})">
            <summary>
            Initializes a new instance of the ErrorResponse class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.ErrorResponse.ErrorMessage">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.ErrorResponse.ModelErrors">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IAddressInfo.#ctor">
            <summary>
            Initializes a new instance of the IAddressInfo class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IAddressInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the IAddressInfo class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IAddressInfo.Address">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IReceiveOutputInfo.#ctor">
            <summary>
            Initializes a new instance of the IReceiveOutputInfo class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IReceiveOutputInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the IReceiveOutputInfo class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IReceiveOutputInfo.Score">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IReceiveOutputInfo.Name">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IReceiveOutputInfo.Category">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IsAliveResponse.#ctor">
            <summary>
            Initializes a new instance of the IsAliveResponse class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IsAliveResponse.#ctor(System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IList{Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IssueIndicator})">
            <summary>
            Initializes a new instance of the IsAliveResponse class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IsAliveResponse.Name">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IsAliveResponse.Version">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IsAliveResponse.Env">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IsAliveResponse.IsDebug">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IsAliveResponse.IssueIndicators">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IsAliveResponse.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IssueIndicator.#ctor">
            <summary>
            Initializes a new instance of the IssueIndicator class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IssueIndicator.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the IssueIndicator class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IssueIndicator.Type">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IssueIndicator.Value">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.ITransactionInfo.#ctor">
            <summary>
            Initializes a new instance of the ITransactionInfo class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.ITransactionInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ITransactionInfo class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.ITransactionInfo.Output">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.ITransactionInfo.Status">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserData.#ctor">
            <summary>
            Initializes a new instance of the IUserData class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserData.#ctor(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the IUserData class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserData.UserId">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserData.LastActivity">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserData.Score">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserData.ScoreUpdatedDate">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserData.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDepositAddressInfo.#ctor">
            <summary>
            Initializes a new instance of the IUserDepositAddressInfo class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDepositAddressInfo.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IAddressInfo})">
            <summary>
            Initializes a new instance of the IUserDepositAddressInfo class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDepositAddressInfo.Total">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDepositAddressInfo.Limit">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDepositAddressInfo.Offset">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDepositAddressInfo.Data">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDetails.#ctor">
            <summary>
            Initializes a new instance of the IUserDetails class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDetails.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Collections.Generic.IList{Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserExplosureDetails})">
            <summary>
            Initializes a new instance of the IUserDetails class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDetails.UserId">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDetails.CreationDate">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDetails.Comment">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDetails.LastActivity">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDetails.Score">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDetails.ScoreUpdatedDate">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDetails.ExposureDetails">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserDetails.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserExplosureDetails.#ctor">
            <summary>
            Initializes a new instance of the IUserExplosureDetails class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserExplosureDetails.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the IUserExplosureDetails class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserExplosureDetails.Category">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserExplosureDetails.SentIndirectExposure">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserExplosureDetails.SentDirectExposure">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserExplosureDetails.ReceivedIndirectExposure">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserExplosureDetails.ReceivedDirectExposure">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserExplosureDetails.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserInfo.#ctor">
            <summary>
            Initializes a new instance of the IUserInfo class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserInfo.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserData})">
            <summary>
            Initializes a new instance of the IUserInfo class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserInfo.Total">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserInfo.Limit">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserInfo.Offset">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserInfo.Data">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserTransactionInfo.#ctor">
            <summary>
            Initializes a new instance of the IUserTransactionInfo class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserTransactionInfo.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.ITransactionInfo})">
            <summary>
            Initializes a new instance of the IUserTransactionInfo class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserTransactionInfo.Total">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserTransactionInfo.Limit">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserTransactionInfo.Offset">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserTransactionInfo.Data">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserWithdrawAddressInfo.#ctor">
            <summary>
            Initializes a new instance of the IUserWithdrawAddressInfo class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserWithdrawAddressInfo.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IWithdrawAddressInfo})">
            <summary>
            Initializes a new instance of the IUserWithdrawAddressInfo class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserWithdrawAddressInfo.Total">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserWithdrawAddressInfo.Limit">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserWithdrawAddressInfo.Offset">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IUserWithdrawAddressInfo.Data">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IWithdrawAddressInfo.#ctor">
            <summary>
            Initializes a new instance of the IWithdrawAddressInfo class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IWithdrawAddressInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the IWithdrawAddressInfo class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IWithdrawAddressInfo.Name">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IWithdrawAddressInfo.Category">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IWithdrawAddressInfo.Score">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.IWithdrawAddressInfo.Address">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.OutputImportModel.#ctor">
            <summary>
            Initializes a new instance of the OutputImportModel class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.OutputImportModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OutputImportModel class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.OutputImportModel.Output">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.UserImportModel.#ctor">
            <summary>
            Initializes a new instance of the UserImportModel class.
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.UserImportModel.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the UserImportModel class.
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.UserImportModel.UserId">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.UserImportModel.DepositAddresses">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.UserImportModel.WithdrawalAddresses">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.UserImportModel.SentOutputs">
            <summary>
            </summary>
        </member>
        <member name="P:Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.UserImportModel.ReceivedOutputs">
            <summary>
            </summary>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdAddressesDepositGetWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List deposit addresses associated with a user.
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdAddressesDepositPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.AddressImportModel,System.String)">
            <summary>
            &lt;p&gt;Add a deposit address associated with a user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically
            created if it does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If
            the deposit address is already associated with the user the
            function succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If the deposit address is
            associated with a different user the function fails (see Response
            Messages below).&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='depositeAddress'>
            The deposit address
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdAddressesDepositByAddressDeleteWithHttpMessagesAsync(System.String,System.String,System.String)">
            <summary>
            Delete a deposit address associated with a user.
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='address'>
            The address to delete
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdOutputsReceivedGetWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            &lt;p&gt;List received outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;For each output the following is listed:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;output&lt;/code&gt;: the actual output&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;status&lt;/code&gt;: the status of the output.Can
            be:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;unconfirmed&lt;/code&gt;: if the transaction has not
            yet confirmed&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;confirmed&lt;/code&gt;: if the transaction has
            confirmed, but not yet settled&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;settled&lt;/code&gt;: if the transaction has at least 5
            confirmations.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Only settlet outputs take part
            in risk score calculations&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it
            cannot be deleted.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='status'>
            The status of the output. Possible values include: 'Active',
            'Committed', 'Aborted', 'InDoubt'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdOutputsReceivedPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.OutputImportModel,System.String)">
            <summary>
            &lt;p&gt;Add a received output associated with a user.&lt;/p&gt;
            &lt;p&gt;Call this function to register that your service has
            received a transaction output on behalf of a user.&lt;/p&gt;
            &lt;p&gt;A transaction output can be specified in two
            ways:&lt;/p&gt;
            &lt;ol&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output index.&lt;/strong&gt;
            E.g.the second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has index 1 and is specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:1"&lt;/code&gt;&lt;/li&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output address.&lt;/strong&gt;
            E.g.the second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has output address
            &lt;code&gt;19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z&lt;/code&gt; and is
            specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z"&lt;/code&gt;&lt;/li&gt;
            &lt;/ol&gt;
            &lt;p&gt;The first form is preferred because the second form is
            ambigious in cases where the transaction has more than one output
            to the specified address.&lt;/p&gt;
            &lt;p&gt;The return value contains a risk
            &lt;code&gt;score&lt;/code&gt;, e.g. &lt;code&gt;red&lt;/code&gt;,
            &lt;code&gt;amber&lt;/code&gt;, or&lt;code&gt;
            green&lt;/code&gt;:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;red&lt;/code&gt;: This output was received directly
            from a suspicious sender.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;amber&lt;/code&gt;: This output was received from an
            unidentified sender.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;green&lt;/code&gt;: This output was received from an
            identified non-suspicious sender. &lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;If the transaction has one or more confirmations and if
            the counterparty is identified the return value will
            contain&lt;code&gt; name&lt;/code&gt; and&lt;code&gt;
            category&lt;/code&gt; of the counterparty.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If the transaction has not yet
            confirmed&lt;code&gt; score&lt;/code&gt; will be
            &lt;code&gt;amber&lt;/code&gt;.Therefore it is advised to call this
            function twice, once your service observes the output, and once the
            transaction has confirmed, just before crediting the amount of the
            output to the user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically
            created if it does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If
            the sent output is already associated with the user the function
            succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; If an output is not settled
            within 7 days it is silently discarded.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='output'>
            The transaction output
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdOutputsReceivedByTxByOutputDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String)">
            <summary>
            &lt;p&gt;Delete a received outputs associated with a
            user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it
            cannot be deleted.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='tx'>
            The hash of the transaction output
            </param>
            <param name='output'>
            The output index or output address
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdOutputsSentGetWithHttpMessagesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            &lt;p&gt;List sent outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;For each output the following is listed:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;output&lt;/code&gt;: the actual output&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;status&lt;/code&gt;: the status of the output.Can
            be:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;unconfirmed&lt;/code&gt;: if the transaction has not
            yet confirmed&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;confirmed&lt;/code&gt;: if the transaction has
            confirmed, but not yet settled&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;settled&lt;/code&gt;: if the transaction has at least 5
            confirmations.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Only settlet outputs take part
            in risk score calculations&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it
            cannot be deleted.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='status'>
            The status of the output. Possible values include: 'unconfirmed',
            'confirmed', 'settled', 'any'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdOutputsSentPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.OutputImportModel,System.String)">
            <summary>
            &lt;p&gt;Add a sent output associated with a user.&lt;/p&gt;
            &lt;p&gt;Call this function to register that your service has sent
            a transaction output on behalf of a user.&lt;/p&gt;
            &lt;p&gt;A transaction output can be specified in two
            ways:&lt;/p&gt;
            &lt;ol&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output index.&lt;/strong&gt;
            E.g.the second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has index 1 and is specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:1"&lt;/code&gt;&lt;/li&gt;
            &lt;li&gt;
            &lt;strong&gt;Transaction hash with output address.&lt;/strong&gt;
            E.g.the second output of the transaction with the
            hash&lt;code&gt;77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e&lt;/code&gt;
            has output address
            &lt;code&gt;19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z&lt;/code&gt; and is
            specified like this
            &lt;code&gt;"77b8b931b3f7cd17e06dee680b77b28bb0809c88087343d657600730ca7ba15e:19eAxqvy3F3i2yNMWNjzwcKbSnMn9kpG1Z"&lt;/code&gt;&lt;/li&gt;
            &lt;/ol&gt;
            &lt;p&gt;The first form is preferred because the second form is
            ambigious in cases where the transaction has more than one output
            to the specified address.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The user is automatically
            created if it does not exist.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The function is idempotent: If
            the sent output is already associated with the user the function
            succeeds.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; If an output is not settled
            within 7 days it is silently discarded.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='output'>
            The transaction output
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdOutputsSentByTxByOutputDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String)">
            <summary>
            &lt;p&gt;Delete a sent outputs associated with a user.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note:&lt;/strong&gt; Once an output has settled it
            cannot be deleted.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='tx'>
            The hash of the transaction output
            </param>
            <param name='output'>
            The output index or output address
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserGetWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            &lt;p&gt;List users with optional filters.&lt;/p&gt;
            &lt;p&gt;For each user the following is returned:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the ID of the user&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;score&lt;/code&gt;: the risk score of the user.E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;. Only included if the user has
            sent or received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;scoreUpdatedDate&lt;/code&gt;: the last time the risk
            score has been updated in POSIX format. Only included if the user
            has sent or received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;lastActivity&lt;/code&gt;: the last time the user sent
            or received value in POSIX format. Only included if the user has
            sent or received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Hint: to only return users with score&lt;code&gt;
            red&lt;/code&gt; set the &lt;code&gt;score&lt;/code&gt; parameter
            to&lt;code&gt; red&lt;/code&gt;&lt;/p&gt;
            &lt;p&gt;Hint: To only return users that have sent or received
            value over the last 2 weeks set the&lt;code&gt;
            maxIdleDays&lt;/code&gt; parameter to 14&lt;/p&gt;
            </summary>
            <param name='token'>
            API-key
            </param>
            <param name='maxIdleDays'>
            Optionally filter the users by specifying the maximum numbers of
            days without sent or received activity.
            </param>
            <param name='score'>
            Optionally filter the users by specifying the risk score. Possible
            values include: 'red', 'amber', 'green'
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserImportPostWithHttpMessagesAsync(Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.UserImportModel,System.String)">
            <summary>
            &lt;p&gt;Import a user with sent and received history.&lt;/p&gt;
            &lt;p&gt;With this function you can import a whole user with sent
            and received output history and all deposit and withdrawal
            addresses.&lt;/p&gt;
            &lt;p&gt;The import format is as follows:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the unique ID of the user. The
            caller decides the user ID and can specify any value containing the
            folllowing characters '-' '_' 'a-z' 'A-Z' '0-9' with a maximum of
            200 characters.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;depositAddresses&lt;/code&gt;: The deposit addresses of
            the user. Specified as an array of strings where each address must
            be a valid Bitcoin addresses.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;withdrawalAddresses&lt;/code&gt;: The withdrawal
            addresses of the user. Specified as an array of strings where each
            address must be a valid Bitcoin addresses.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentOutputs&lt;/code&gt;: The transaction outputs sent
            by the user.See below for a specification on how to format an
            output.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedOutputs&lt;/code&gt;: The transaction outputs
            received by the user.See below for a specification on how to format
            an output.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Sent or received outputs can be specified in two
            ways:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;A transaction hash followed by the index of the output
            counting from zero:
            &lt;code&gt;tx-hash:output-index&lt;/code&gt;.Exmaple: The first
            output of of the transaction&lt;code&gt;
            d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e&lt;/code&gt;
            is specified like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:0"&lt;/code&gt;
            and the second output like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:1"&lt;/code&gt;&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;A transaction hash followed by the address of the output:
            &lt;code&gt;tx-hash:output-address&lt;/code&gt;.Exmaple: The first
            output of of the transaction&lt;code&gt;
            d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e&lt;/code&gt;
            is specified like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:1ERWgzFdPwbAYM6GWg9dUX1Q3KssatXgYz"&lt;/code&gt;
            and the second output like this
            &lt;code&gt;"d03104f31dfbea2fa0e9c871790fbd1864d5b43354612c5b0b725eeb73bb7b8e:16F5EJE8mgiEDJzKqRdWUzdB54WceDRfjx"&lt;/code&gt;&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: The second output format can be
            ambigious in cases where the output address appears more than once
            in the outputs of a single transaction. If this occurs the first
            matching output is selected.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: Importing a user with sent or
            received outputs with less than 5 confirmations will
            fail.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: Subsequent import calls with the
            same userId are incremental, meaning that you can import another
            (E.g. new) version of a user on top of what is registered for that
            user already.In other words, any existing outputs or addresses
            which are not in the new import will NOT get deleted.&lt;/p&gt;
            &lt;p&gt;
            &lt;strong&gt;Note&lt;/strong&gt;: If one of the deposit addresses
            are associated with a different user the function fails(see
            Response Messages below).&lt;/p&gt;
            </summary>
            <param name='userImport'>
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdGetWithHttpMessagesAsync(System.String,System.String)">
            <summary>
            &lt;p&gt;Get information about a user.&lt;/p&gt;
            &lt;p&gt;The follwing information is returned:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;userId&lt;/code&gt;: the ID of the user&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;creationDate&lt;/code&gt;: the POSIX time when the user
            was created&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;comment&lt;/code&gt;: an arbitrary string that can be
            set using another API function.Only included if set.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;score&lt;/code&gt;: the risk score of the user. E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;. Only included if the user has
            sent or received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;scoreUpdatedDate&lt;/code&gt;: the last time the risk
            score has been updated in POSIX format. Only included if the user
            has sent or received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;lastActivity&lt;/code&gt;: the last time the user sent
            or received value in POSIX format. Only included if the user has
            sent or received value.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;exposureDetails&lt;/code&gt;: detailed exposure
            data.Only included if the user has sent or received
            value.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;category&lt;/code&gt;: exposure category.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentIndirectExposure&lt;/code&gt;: funds sent
            indirectly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;sentDirectExposure&lt;/code&gt;: funds sent
            directly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedIndirectExposure&lt;/code&gt;: funds received
            indirectly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;
            &lt;code&gt;receivedDirectExposure&lt;/code&gt;: funds received
            directly.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdCommentPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.CommentModel,System.String)">
            <summary>
            &lt;p&gt;Set the &lt;code&gt;comment&lt;/code&gt; string on a
            user.&lt;/p&gt;
            &lt;p&gt;This is a convenience function that allows you to set an
            arbitrary string for a user.When retrieving a user the string is
            returned.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='comment'>
            The deposit address
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdAddressesWithdrawalGetWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            &lt;p&gt;List withdrawal addresses associated with a
            user.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;Each withdrawal address is given a risk&lt;code&gt;
            score&lt;/code&gt;. E.g. &lt;code&gt;red&lt;/code&gt;,
            &lt;code&gt;amber&lt;/code&gt;, or&lt;code&gt;
            green&lt;/code&gt;.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;If a withdrawal address belongs to a known service,
            then&lt;code&gt; name&lt;/code&gt; and&lt;code&gt;
            category&lt;/code&gt; will be included and gives the name and
            category of that service. Otherwise&lt;code&gt; name&lt;/code&gt;
            and&lt;code&gt; category&lt;/code&gt; will be omitted.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='token'>
            API-key
            </param>
            <param name='limit'>
            The maximum number of items to return.
            </param>
            <param name='offset'>
            The offset into the result set
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdAddressesWithdrawalPostWithHttpMessagesAsync(System.String,Lykke.Service.ChainalysisMock.Client.AutorestClient.Models.AddressImportModel,System.String)">
            <summary>
            &lt;p&gt;Add a withdrawal address associated with a user.&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;The user is automatically created if it does not
            exist.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;The function is idempotent: If the withdrawal address is
            already associated with the user the function succeeds.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;The function returns an analysis of the withdrawal
            address:&lt;/p&gt;
            &lt;ul&gt;
            &lt;li&gt;
            &lt;p&gt;A risk &lt;code&gt;score&lt;/code&gt;.E.g.
            &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;amber&lt;/code&gt;,
            or&lt;code&gt; green&lt;/code&gt;.&lt;/p&gt;
            &lt;/li&gt;
            &lt;li&gt;
            &lt;p&gt;If a withdrawal address belongs to a known service,
            then&lt;code&gt; name&lt;/code&gt; and&lt;code&gt;
            category&lt;/code&gt; will be included and gives the name and
            category of that service. Otherwise&lt;code&gt; name&lt;/code&gt;
            and&lt;code&gt; category&lt;/code&gt; will be omitted.&lt;/p&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p&gt;Hint: This function could be called both when a user
            pastes in the withdrawal address for the first time, and also
            before each subsequent withdrawal.&lt;/p&gt;
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='withdrawalAddress'>
            The withdrawal address
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
        <member name="M:Lykke.Service.ChainalysisMock.Client.IChainalysisMockClient.UserByUserIdAddressesWithdrawalByAddressDeleteWithHttpMessagesAsync(System.String,System.String,System.String)">
            <summary>
            Delete a withdrawal address associated with a user.
            </summary>
            <param name='userId'>
            The ID of the user
            </param>
            <param name='address'>
            The address to delete
            </param>
            <param name='token'>
            API-key
            </param>
        </member>
    </members>
</doc>
